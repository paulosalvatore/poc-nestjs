//******** AUTO GENERATED FILE, DO NOT EDIT.  *********

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["nativeTypes"]
}


model Audit {
  id         Int        @id @default(autoincrement())
  table      String
  foreignKey Int
  action     AuditAction
  previous   Json?
  after      Json?
  created    DateTime
}

enum AuditAction {
  INSERT
  UPDATE
  DELETE
}


model Campus {
  id     Int    @id @default(autoincrement())
  name   String @unique
  users  User[]
  speakers     Speaker[]
  logradouro String
  numero String
  complemento String
  bairro String
  cep String @db.VarChar(8)
  referencia String
  telefone String @db.VarChar(11)
  email String
  latitude Decimal
  longitude Decimal
  meta   Meta   @relation(fields: [metaId], references: [id])
  metaId Int
}


model Course {
  id       Int     @id @default(autoincrement())
  title    String  @unique
  type     CourseType
  tracks   Track[]
  campuses Campus[]
  courseSpeakers CourseSpeaker[]
  ementa  String
  courseClasses CourseClass[]
  targetAudience String
  preparation String
  preRequisites String
  meta     Meta    @relation(fields: [metaId], references: [id])
  metaId   Int
}

model CourseClass {
  id        Int        @id @default(autoincrement())
  course Course
  gradeCurricular  String
  cargaHoraria     Decimal
  courseSpeakers   CourseSpeaker[]
  meta      Meta       @relation(fields: [metaId], references: [id])
  metaId    Int
}

model CourseSpeaker {
  id        Int        @id @default(autoincrement())
  course  Course
  speaker Speaker
  campus  Campus
  courseClasses CourseClass[]
  meta      Meta       @relation(fields: [metaId], references: [id])
  metaId    Int
}

enum CourseType {
    Course
    Lecture
}

model Track {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  courses    Course[]
  formations Formation[]
  meta       Meta     @relation(fields: [metaId], references: [id])
  metaId     Int
}

model Formation {
  id       Int      @id @default(autoincrement())
  title    String   @unique
  subtitle String   @unique
  tracks   Track[]
  meta     Meta     @relation(fields: [metaId], references: [id])
  metaId   Int
}


enum Gender {
  MALE
  FEMALE
  OTHER
}


model Meta {
  id       Int      @id @default(autoincrement())
  created  DateTime @default(now())
  modified DateTime @default(now())
  active   Boolean  @default(false)
}


model Speaker {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int @unique
  campuses     Campus[]
  courseSpeakers CourseSpeaker[]
  meta       Meta     @relation(fields: [metaId], references: [id])
  metaId     Int
}

// Página do professor não é MVP


model UserRole {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  role   Role

  @@unique([userId, role], name: "unique_user_role")
}

enum Role {
  ADMIN
  STUDENT
  SPEAKER
}


model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String?
  name      String?
  nickname  String?
  cpf       String     @unique @db.VarChar(11)
  phone     String?    @db.VarChar(15)
  gender    Gender?
  birthdate DateTime?
  avatar    String?
  campuses  Campus[]
  role      UserRole[]
  speaker Speaker?
  meta      Meta       @relation(fields: [metaId], references: [id])
  metaId    Int
}
